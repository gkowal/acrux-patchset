diff '--color=auto' -uNr linux-6.15.1/arch/sparc/mm/init_64.c linux-6.15.1-p1/arch/sparc/mm/init_64.c
--- linux-6.15.1/arch/sparc/mm/init_64.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/arch/sparc/mm/init_64.c	2025-06-05 08:05:01.971725927 -0300
@@ -3069,11 +3069,11 @@
 static void __init kernel_lds_init(void)
 {
 	code_resource.start = compute_kern_paddr(_text);
-	code_resource.end   = compute_kern_paddr(_etext - 1);
+	code_resource.end   = compute_kern_paddr(_etext) - 1;
 	data_resource.start = compute_kern_paddr(_etext);
-	data_resource.end   = compute_kern_paddr(_edata - 1);
+	data_resource.end   = compute_kern_paddr(_edata) - 1;
 	bss_resource.start  = compute_kern_paddr(__bss_start);
-	bss_resource.end    = compute_kern_paddr(_end - 1);
+	bss_resource.end    = compute_kern_paddr(_end) - 1;
 }
 
 static int __init report_memory(void)
diff '--color=auto' -uNr linux-6.15.1/drivers/base/firmware_loader/main.c linux-6.15.1-p1/drivers/base/firmware_loader/main.c
--- linux-6.15.1/drivers/base/firmware_loader/main.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/drivers/base/firmware_loader/main.c	2025-06-05 08:05:01.984599658 -0300
@@ -898,6 +898,11 @@
 
 	ret = _request_firmware_prepare(&fw, name, device, buf, size,
 					offset, opt_flags);
+
+#ifdef CONFIG_GENTOO_PRINT_FIRMWARE_INFO
+        printk(KERN_NOTICE "Loading firmware: %s\n", name);
+#endif
+
 	if (ret <= 0) /* error or already assigned */
 		goto out;
 
diff '--color=auto' -uNr linux-6.15.1/fs/namei.c linux-6.15.1-p1/fs/namei.c
--- linux-6.15.1/fs/namei.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/fs/namei.c	2025-06-05 08:05:01.969661452 -0300
@@ -1095,10 +1095,10 @@
 		path_put(&last->link);
 }
 
-static int sysctl_protected_symlinks __read_mostly;
-static int sysctl_protected_hardlinks __read_mostly;
-static int sysctl_protected_fifos __read_mostly;
-static int sysctl_protected_regular __read_mostly;
+static int sysctl_protected_symlinks __read_mostly = 1;
+static int sysctl_protected_hardlinks __read_mostly = 1;
+int sysctl_protected_fifos __read_mostly = 1;
+int sysctl_protected_regular __read_mostly = 1;
 
 #ifdef CONFIG_SYSCTL
 static const struct ctl_table namei_sysctls[] = {
diff '--color=auto' -uNr linux-6.15.1/kernel/sys.c linux-6.15.1-p1/kernel/sys.c
--- linux-6.15.1/kernel/sys.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/kernel/sys.c	2025-06-05 08:05:01.974509234 -0300
@@ -2748,10 +2748,16 @@
 		break;
 #endif
 	case PR_SET_MDWE:
-		error = prctl_set_mdwe(arg2, arg3, arg4, arg5);
+		if (IS_ENABLED(CONFIG_PARISC))
+			error = -EINVAL;
+		else
+			error = prctl_set_mdwe(arg2, arg3, arg4, arg5);
 		break;
 	case PR_GET_MDWE:
-		error = prctl_get_mdwe(arg2, arg3, arg4, arg5);
+		if (IS_ENABLED(CONFIG_PARISC))
+			error = -EINVAL;
+		else
+			error = prctl_get_mdwe(arg2, arg3, arg4, arg5);
 		break;
 	case PR_PPC_GET_DEXCR:
 		if (arg3 || arg4 || arg5)
diff '--color=auto' -uNr linux-6.15.1/net/bluetooth/hci_conn.c linux-6.15.1-p1/net/bluetooth/hci_conn.c
--- linux-6.15.1/net/bluetooth/hci_conn.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/net/bluetooth/hci_conn.c	2025-06-05 08:05:01.976632277 -0300
@@ -2311,8 +2311,13 @@
 		return 0;
 	}
 
-	if (hci_conn_ssp_enabled(conn) &&
-	    !test_bit(HCI_CONN_ENCRYPT, &conn->flags))
+	/* If Secure Simple Pairing is not enabled, then legacy connection
+	 * setup is used and no encryption or key sizes can be enforced.
+	 */
+	if (!hci_conn_ssp_enabled(conn))
+		return 1;
+
+	if (!test_bit(HCI_CONN_ENCRYPT, &conn->flags))
 		return 0;
 
 	return 1;
diff '--color=auto' -uNr linux-6.15.1/scripts/kconfig/lxdialog/dialog.h linux-6.15.1-p1/scripts/kconfig/lxdialog/dialog.h
--- linux-6.15.1/scripts/kconfig/lxdialog/dialog.h	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/scripts/kconfig/lxdialog/dialog.h	2025-06-05 08:05:01.978630257 -0300
@@ -58,6 +58,8 @@
 #define ACS_DARROW 'v'
 #endif
 
+#define KEY_ACTION_SORT 11
+
 /* error return codes */
 #define ERRDISPLAYTOOSMALL (KEY_MAX + 1)
 
@@ -127,6 +129,7 @@
 int item_activate_selected(void);
 void *item_data(void);
 char item_tag(void);
+void sort_items(void);
 
 /* item list manipulation for lxdialog use */
 #define MAXITEMSTR 200
@@ -196,7 +199,7 @@
 		   int initial_width, int *_vscroll, int *_hscroll,
 		   int (*extra_key_cb)(int, size_t, size_t, void *), void *data);
 int dialog_menu(const char *title, const char *prompt,
-		const void *selected, int *s_scroll);
+		const void *selected, int *s_scroll, bool sort);
 int dialog_checklist(const char *title, const char *prompt, int height,
 		     int width, int list_height);
 int dialog_inputbox(const char *title, const char *prompt, int height,
diff '--color=auto' -uNr linux-6.15.1/scripts/kconfig/lxdialog/menubox.c linux-6.15.1-p1/scripts/kconfig/lxdialog/menubox.c
--- linux-6.15.1/scripts/kconfig/lxdialog/menubox.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/scripts/kconfig/lxdialog/menubox.c	2025-06-05 08:05:01.978676012 -0300
@@ -161,7 +161,7 @@
  * Display a menu for choosing among a number of options
  */
 int dialog_menu(const char *title, const char *prompt,
-		const void *selected, int *s_scroll)
+		const void *selected, int *s_scroll, bool sort)
 {
 	int i, j, x, y, box_x, box_y;
 	int height, width, menu_height;
@@ -181,6 +181,9 @@
 
 	max_choice = MIN(menu_height, item_count());
 
+	if (sort)
+		sort_items();
+
 	/* center dialog box on screen */
 	x = (getmaxx(stdscr) - width) / 2;
 	y = (getmaxy(stdscr) - height) / 2;
@@ -408,6 +411,8 @@
 			delwin(menu);
 			delwin(dialog);
 			goto do_resize;
+		case '>':
+			return KEY_ACTION_SORT;
 		}
 	}
 	delwin(menu);
diff '--color=auto' -uNr linux-6.15.1/scripts/kconfig/lxdialog/util.c linux-6.15.1-p1/scripts/kconfig/lxdialog/util.c
--- linux-6.15.1/scripts/kconfig/lxdialog/util.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/scripts/kconfig/lxdialog/util.c	2025-06-05 08:05:01.978742527 -0300
@@ -563,6 +563,85 @@
 	item_cur = &item_nil;
 }
 
+/*
+ * Function skips a part of the label to get the actual label text
+ * (without the '[ ]'-like prefix).
+ */
+static char *skip_spec_characters(char *s)
+{
+	bool unbalanced = false;
+
+	while (*s) {
+		if (isalnum(*s) && !unbalanced) {
+			break;
+		} else if (*s == '[' || *s == '<' || *s == '(') {
+			/*
+			 * '[', '<' or '(' means that we need to look for
+			 * closure
+			 */
+			unbalanced = true;
+		} else if (*s == '-') {
+			/*
+			 * Labels could start with "-*-", so '-' here either
+			 * opens or closes the "checkbox"
+			 */
+			unbalanced = !unbalanced;
+		} else if (*s == '>' || *s == ']' || *s == ')') {
+			unbalanced = false;
+		}
+		s++;
+	}
+	return s;
+}
+
+static int compare_labels(const void *a, const void *b)
+{
+	struct dialog_list *el1 = *((struct dialog_list **)a);
+	struct dialog_list *el2 = *((struct dialog_list **)b);
+
+	return strcasecmp(skip_spec_characters(el1->node.str),
+			  skip_spec_characters(el2->node.str));
+}
+
+void sort_items(void)
+{
+	struct dialog_list **arr;
+	struct dialog_list *cur;
+	size_t n, i;
+
+	n = item_count();
+	if (n == 0)
+		return;
+
+	/* Copy all items from linked list into array */
+	cur = item_head;
+	arr = malloc(sizeof(*arr) * n);
+
+	if (!arr) {
+		/* Don't have enough memory, so don't do anything */
+		return;
+	}
+
+	for (i = 0; i < n; i++) {
+		arr[i] = cur;
+		cur = cur->next;
+	}
+
+	qsort(arr, n, sizeof(struct dialog_list *), compare_labels);
+
+	/* Restore the linked list structure from the sorted array */
+	for (i = 0; i < n; i++) {
+		if (i < n - 1)
+			arr[i]->next = arr[i + 1];
+		else
+			arr[i]->next = NULL;
+	}
+
+	item_head = arr[0];
+
+	free(arr);
+}
+
 void item_make(const char *fmt, ...)
 {
 	va_list ap;
diff '--color=auto' -uNr linux-6.15.1/scripts/kconfig/mconf.c linux-6.15.1-p1/scripts/kconfig/mconf.c
--- linux-6.15.1/scripts/kconfig/mconf.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/scripts/kconfig/mconf.c	2025-06-05 08:05:01.978816094 -0300
@@ -750,6 +750,7 @@
 	}
 }
 
+static bool should_sort;
 static void conf(struct menu *menu, struct menu *active_menu)
 {
 	struct menu *submenu;
@@ -775,9 +776,15 @@
 		dialog_clear();
 		res = dialog_menu(prompt ? prompt : "Main Menu",
 				  menu_instructions,
-				  active_menu, &s_scroll);
+				  active_menu, &s_scroll, should_sort);
 		if (res == 1 || res == KEY_ESC || res == -ERRDISPLAYTOOSMALL)
 			break;
+
+		if (res == KEY_ACTION_SORT) {
+			should_sort = !should_sort;
+			continue;
+		}
+
 		if (item_count() != 0) {
 			if (!item_activate_selected())
 				continue;
diff '--color=auto' -uNr linux-6.15.1/scripts/sign-file.c linux-6.15.1-p1/scripts/sign-file.c
--- linux-6.15.1/scripts/sign-file.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/scripts/sign-file.c	2025-06-05 08:05:01.980753450 -0300
@@ -51,9 +51,10 @@
  * signing with anything other than SHA1 - so we're stuck with that if such is
  * the case.
  */
-#if defined(LIBRESSL_VERSION_NUMBER) || \
-	OPENSSL_VERSION_NUMBER < 0x10000000L || \
-	defined(OPENSSL_NO_CMS)
+#if defined(OPENSSL_NO_CMS) || \
+	( defined(LIBRESSL_VERSION_NUMBER) \
+	&& (LIBRESSL_VERSION_NUMBER < 0x3010000fL) ) || \
+	OPENSSL_VERSION_NUMBER < 0x10000000L
 #define USE_PKCS7
 #endif
 #ifndef USE_PKCS7
diff '--color=auto' -uNr linux-6.15.1/tools/lib/bpf/elf.c linux-6.15.1-p1/tools/lib/bpf/elf.c
--- linux-6.15.1/tools/lib/bpf/elf.c	2025-06-04 09:46:27.000000000 -0300
+++ linux-6.15.1-p1/tools/lib/bpf/elf.c	2025-06-05 08:05:01.982663054 -0300
@@ -370,6 +370,11 @@
 	return ret;
 }
 
+#if !defined(__clang__)
+#pragma GCC diagnostic push
+/* https://gcc.gnu.org/PR114952 */
+#pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
+#endif
 /* Find offset of function name in ELF object specified by path. "name" matches
  * symbol name or name@@LIB for library functions.
  */
@@ -385,6 +390,9 @@
 	elf_close(&elf_fd);
 	return ret;
 }
+#if !defined(__clang__)
+#pragma GCC diagnostic pop
+#endif
 
 struct symbol {
 	const char *name;

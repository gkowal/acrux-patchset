diff -uNr linux-5.7.1/drivers/hid/hid-apple.c linux-5.7.1-p1/drivers/hid/hid-apple.c
--- linux-5.7.1/drivers/hid/hid-apple.c	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/drivers/hid/hid-apple.c	2020-06-08 13:10:11.215279615 -0300
@@ -51,6 +51,22 @@
 		"(For people who want to keep Windows PC keyboard muscle memory. "
 		"[0] = as-is, Mac layout. 1 = swapped, Windows layout.)");
 
+static unsigned int swap_fn_leftctrl;
+module_param(swap_fn_leftctrl, uint, 0644);
+MODULE_PARM_DESC(swap_fn_leftctrl, "Swap the Fn and left Control keys. "
+		"(For people who want to keep PC keyboard muscle memory. "
+		"[0] = as-is, Mac layout, 1 = swapped, PC layout)");
+
+static unsigned int rightalt_as_rightctrl;
+module_param(rightalt_as_rightctrl, uint, 0644);
+MODULE_PARM_DESC(rightalt_as_rightctrl, "Use the right Alt key as a right Ctrl key. "
+		"[0] = as-is, Mac layout. 1 = Right Alt is right Ctrl");
+
+static unsigned int ejectcd_as_delete;
+module_param(ejectcd_as_delete, uint, 0644);
+MODULE_PARM_DESC(ejectcd_as_delete, "Use Eject-CD key as Delete key. "
+		"([0] = disabled, 1 = enabled)");
+
 struct apple_sc {
 	unsigned long quirks;
 	unsigned int fn_on;
@@ -162,6 +178,21 @@
 	{ }
 };
 
+static const struct apple_key_translation swapped_fn_leftctrl_keys[] = {
+	{ KEY_FN, KEY_LEFTCTRL },
+	{ }
+};
+
+static const struct apple_key_translation rightalt_as_rightctrl_keys[] = {
+	{ KEY_RIGHTALT, KEY_RIGHTCTRL },
+	{ }
+};
+
+static const struct apple_key_translation ejectcd_as_delete_keys[] = {
+	{ KEY_EJECTCD,	KEY_DELETE },
+	{ }
+};
+
 static const struct apple_key_translation *apple_find_translation(
 		const struct apple_key_translation *table, u16 from)
 {
@@ -183,9 +214,11 @@
 	bool do_translate;
 	u16 code = 0;
 
-	if (usage->code == KEY_FN) {
+	u16 fn_keycode = (swap_fn_leftctrl) ? (KEY_LEFTCTRL) : (KEY_FN);
+
+	if (usage->code == fn_keycode) {
 		asc->fn_on = !!value;
-		input_event(input, usage->type, usage->code, value);
+		input_event(input, usage->type, KEY_FN, value);
 		return 1;
 	}
 
@@ -270,6 +303,30 @@
 		}
 	}
 
+	if (swap_fn_leftctrl) {
+		trans = apple_find_translation(swapped_fn_leftctrl_keys, usage->code);
+		if (trans) {
+			input_event(input, usage->type, trans->to, value);
+			return 1;
+		}
+	}
+
+	if (ejectcd_as_delete) {
+		trans = apple_find_translation(ejectcd_as_delete_keys, usage->code);
+		if (trans) {
+			input_event(input, usage->type, trans->to, value);
+			return 1;
+		}
+	}
+
+	if (rightalt_as_rightctrl) {
+		trans = apple_find_translation(rightalt_as_rightctrl_keys, usage->code);
+		if (trans) {
+			input_event(input, usage->type, trans->to, value);
+			return 1;
+		}
+	}
+
 	return 0;
 }
 
@@ -333,6 +390,21 @@
 
 	for (trans = apple_iso_keyboard; trans->from; trans++)
 		set_bit(trans->to, input->keybit);
+
+	if (swap_fn_leftctrl) {
+		for (trans = swapped_fn_leftctrl_keys; trans->from; trans++)
+			set_bit(trans->to, input->keybit);
+	}
+
+	if (ejectcd_as_delete) {
+		for (trans = ejectcd_as_delete_keys; trans->from; trans++)
+			set_bit(trans->to, input->keybit);
+	}
+
+        if (rightalt_as_rightctrl) {
+		for (trans = rightalt_as_rightctrl_keys; trans->from; trans++)
+			set_bit(trans->to, input->keybit);
+	}
 }
 
 static int apple_input_mapping(struct hid_device *hdev, struct hid_input *hi,
diff -uNr linux-5.7.1/drivers/hwmon/Kconfig linux-5.7.1-p1/drivers/hwmon/Kconfig
--- linux-5.7.1/drivers/hwmon/Kconfig	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/drivers/hwmon/Kconfig	2020-06-08 13:10:11.219279718 -0300
@@ -1778,6 +1778,7 @@
 config SENSORS_TMP513
 	tristate "Texas Instruments TMP513 and compatibles"
 	depends on I2C
+	select REGMAP_I2C
 	help
 	  If you say yes here you get support for Texas Instruments TMP512,
 	  and TMP513 temperature and power supply sensor chips.
diff -uNr linux-5.7.1/drivers/media/i2c/Kconfig linux-5.7.1-p1/drivers/media/i2c/Kconfig
--- linux-5.7.1/drivers/media/i2c/Kconfig	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/drivers/media/i2c/Kconfig	2020-06-08 13:10:11.224279847 -0300
@@ -379,6 +379,7 @@
 config VIDEO_TVP5150
 	tristate "Texas Instruments TVP5150 video decoder"
 	depends on VIDEO_V4L2 && I2C
+	select REGMAP_I2C
 	select V4L2_FWNODE
 	select REGMAP_I2C
 	help
diff -uNr linux-5.7.1/fs/namei.c linux-5.7.1-p1/fs/namei.c
--- linux-5.7.1/fs/namei.c	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/fs/namei.c	2020-06-08 13:10:11.206279384 -0300
@@ -918,8 +918,8 @@
 		path_put(&last->link);
 }
 
-int sysctl_protected_symlinks __read_mostly = 0;
-int sysctl_protected_hardlinks __read_mostly = 0;
+int sysctl_protected_symlinks __read_mostly = 1;
+int sysctl_protected_hardlinks __read_mostly = 1;
 int sysctl_protected_fifos __read_mostly;
 int sysctl_protected_regular __read_mostly;
 
diff -uNr linux-5.7.1/include/uapi/linux/xattr.h linux-5.7.1-p1/include/uapi/linux/xattr.h
--- linux-5.7.1/include/uapi/linux/xattr.h	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/include/uapi/linux/xattr.h	2020-06-08 13:10:11.200279229 -0300
@@ -77,5 +77,9 @@
 #define XATTR_POSIX_ACL_DEFAULT  "posix_acl_default"
 #define XATTR_NAME_POSIX_ACL_DEFAULT XATTR_SYSTEM_PREFIX XATTR_POSIX_ACL_DEFAULT
 
+/* User namespace */
+#define XATTR_PAX_PREFIX XATTR_USER_PREFIX "pax."
+#define XATTR_PAX_FLAGS_SUFFIX "flags"
+#define XATTR_NAME_PAX_FLAGS XATTR_PAX_PREFIX XATTR_PAX_FLAGS_SUFFIX
 
 #endif /* _UAPI_LINUX_XATTR_H */
diff -uNr linux-5.7.1/mm/shmem.c linux-5.7.1-p1/mm/shmem.c
--- linux-5.7.1/mm/shmem.c	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/mm/shmem.c	2020-06-08 13:10:11.201279255 -0300
@@ -3238,6 +3238,14 @@
 	struct shmem_inode_info *info = SHMEM_I(inode);
 
 	name = xattr_full_name(handler, name);
+
+	if (!strncmp(name, XATTR_USER_PREFIX, XATTR_USER_PREFIX_LEN)) {
+		if (strcmp(name, XATTR_NAME_PAX_FLAGS))
+			return -EOPNOTSUPP;
+		if (size > 8)
+			return -EINVAL;
+	}
+
 	return simple_xattr_set(&info->xattrs, name, value, size, flags, NULL);
 }
 
@@ -3253,6 +3261,12 @@
 	.set = shmem_xattr_handler_set,
 };
 
+static const struct xattr_handler shmem_user_xattr_handler = {
+	.prefix = XATTR_USER_PREFIX,
+	.get = shmem_xattr_handler_get,
+	.set = shmem_xattr_handler_set,
+};
+
 static const struct xattr_handler *shmem_xattr_handlers[] = {
 #ifdef CONFIG_TMPFS_POSIX_ACL
 	&posix_acl_access_xattr_handler,
@@ -3260,6 +3274,7 @@
 #endif
 	&shmem_security_xattr_handler,
 	&shmem_trusted_xattr_handler,
+	&shmem_user_xattr_handler,
 	NULL
 };
 
diff -uNr linux-5.7.1/net/bluetooth/hci_conn.c linux-5.7.1-p1/net/bluetooth/hci_conn.c
--- linux-5.7.1/net/bluetooth/hci_conn.c	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/net/bluetooth/hci_conn.c	2020-06-08 13:10:11.211279512 -0300
@@ -1308,8 +1308,13 @@
 			return 0;
 	}
 
-	if (hci_conn_ssp_enabled(conn) &&
-	    !test_bit(HCI_CONN_ENCRYPT, &conn->flags))
+	/* If Secure Simple Pairing is not enabled, then legacy connection
+	 * setup is used and no encryption or key sizes can be enforced.
+	 */
+	if (!hci_conn_ssp_enabled(conn))
+		return 1;
+
+	if (!test_bit(HCI_CONN_ENCRYPT, &conn->flags))
 		return 0;
 
 	return 1;
diff -uNr linux-5.7.1/scripts/sign-file.c linux-5.7.1-p1/scripts/sign-file.c
--- linux-5.7.1/scripts/sign-file.c	2020-06-07 06:33:02.000000000 -0300
+++ linux-5.7.1-p1/scripts/sign-file.c	2020-06-08 13:10:11.228279950 -0300
@@ -41,9 +41,10 @@
  * signing with anything other than SHA1 - so we're stuck with that if such is
  * the case.
  */
-#if defined(LIBRESSL_VERSION_NUMBER) || \
-	OPENSSL_VERSION_NUMBER < 0x10000000L || \
-	defined(OPENSSL_NO_CMS)
+#if defined(OPENSSL_NO_CMS) || \
+	( defined(LIBRESSL_VERSION_NUMBER) \
+	&& (LIBRESSL_VERSION_NUMBER < 0x3010000fL) ) || \
+	OPENSSL_VERSION_NUMBER < 0x10000000L
 #define USE_PKCS7
 #endif
 #ifndef USE_PKCS7
